import re
import os

class Message:
    messages = []
    def __init__(self, time = None, name = None, text = None):
        self.time = time
        self.user = name
        self.text = text
        Message.messages.append(self)
        
    def __repr__(self):
        return f"({self.time}) {self.user}: {self.text}"
    
    def add_message(self):
        return Message.messages.append(self)
    
    def get_messages(self, name): 
        find_messages = []
        for every_element in self.messages:
            if every_element.user == name:
                find_messages.append(every_element.text)
        return find_messages
        
class User:
    users = []
    def __init__(self, name):
        self.name = name
        self.messages = []
      
    def __repr__(self):
        return self.name
    
    def add_message(self):
        pass
        
    def add_user(self):        
        User.users.append(self.name)
        
    def get_user_messages(self,name):
        _message = Message() # вызываем без параметров, создаём новый экземпляр
        return _message.get_messages(name) # вызываем метод с параметром name
        
def chat_parse(filepath):

    with open(filepath, 'r', encoding='utf8') as chat:
        for line in chat:
            #Вопрос 1- в выражении pattern в 3-й группе не получается правильно задать фильтр, чтобы выделить текст сообщения (\W*)              
            m = re.search(r'(\d{4}-\d{2}-\d{2}[ ]\d{2}:\d{2}:\d{2}).\w{1,3};([А-Я][а-я]*.[А-Я][а-я]*.[А-Я][а-я]*);(\W*)',line,re.MULTILINE)               
            if m != None:
                time = m.group(1) 
                name = m.group(2) 
                text = m.group(3)
                _user = User(name)
                _user.add_user()
                new_message = Message(time, name, text) 
                #_user.add_message()
            else:
                print(m) # Вопрос 4 - откуда-то вылезают None?       
        # вывод списка сообщений каждого пользователя:
        for usr in _user.users:
           print("User: " + usr) 
           print(_user.get_user_messages(usr)) #РЕШЕНО: работает, если в Message.__init__() прописать (time = None, name = None, text = None), а в User.get_user_messages() создавать экземпляр _message без параметров, после чего вызывать метод _message.get_messages(name) экземпляра 
            
work_directory = os.getcwd()            

chat_parse(work_directory+"/chat_15.txt")


    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            
            
